{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw12240\paperh15840\margl1440\margr1440\vieww19080\viewh13700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 library(readxl)\
library(sjPlot)\
library(table1)\
setwd(dir = "/Users/diegomartinlombardo/Desktop/ABCD_project")\
\
data_table<- my_data[ ,c("Age" , "Sex", "Income", "Parents_H_Degree\'94,\'94mri_info_manufacturer\'94, \'93rsfmri_c_ngd_meanmotion\'94, DMN_DAN", "DMN_FPN", "DMN_VAN","DAN","VAN","FPN", "FPN_DAN", "DMN",\'94nihtbx_list_uncorrected\'94,\'94nihtbx_fluidcomp_uncorrected\'94, \'93nihtbx_cryst_uncorrected\'94,\'94nihtbx_picvocab_uncorrected\'94, \
\'94AVGcryst","AVGfluid")]\
\
high.educ = data_table$Parents_H_Degree\
\
\
idx <- which(high.educ %in% 0:12, arr.ind = TRUE)\
\
high.educ[idx] = 1 # "< HS Diploma"\
\
idx <- which(high.educ %in% 13:14, arr.ind = TRUE)\
\
high.educ[idx] = 2 # "HS Diploma/GED"\
\
idx <- which(high.educ %in% 15:17, arr.ind = TRUE)\
\
high.educ[idx] = 3 # "Some College"\
\
idx <- which(high.educ == 18, arr.ind = TRUE)\
\
high.educ[idx] = 4 # "Bachelor"\
\
idx <- which(high.educ %in% 19:21, arr.ind = TRUE)\
\
high.educ[idx] = 5 # "Post Graduate Degree"\
\
high.educ[which(high.educ == "999")]=NA\
\
high.educ[which(high.educ == "777")]=NA\
\
my_data$Parents_H_Degree = factor( high.educ, levels= 1:5, labels = c("< HS Diploma","HS Diploma/GED","Some College","Bachelor","Post Graduate Degree") )\
\
\
###### Whole-data ######\
\
table1::label(my_data1$Age)  <- "Age (months first session)\'94\
table1::label(my_data1$Parents_H_Degree)  <- "Highest-degreed parent (years)"\
\
table1::label(data_table$Sex)  <- "Age (months first session)\'94\
\
table1::label(data_table$Income)  <- "Household Income (year) in USD\'94\
\
table1::label(data_table$mri_info_manufacturer)  <- \'93MRI manufacturer\'94\
\
table1::label(data_table$rsfmri_c_ngd_meanmotion)  <- \'93Average framewise displacement in mm\'94\
\
table1::label(data_table$nihtbx_list_uncorrected)  <- \'93NIH  List Sorting Working Memory Score\'94\
\
table1::label(data_table$nihtbx_fluidcomp_uncorrected)  <- \'93Fluid intelligence Score NIH\'94\
\
table1::label(data_table$nihtbx_cryst_uncorrected)  <- \'93Crystilized intelligence Score NIH\'94\
\
table1::label(data_table$nihtbx_picvocab_uncorrected)  <- \'93Picture Vocabulary Test Score NIH\'94\
\
table1::label(data_table$AVGcryst  <- \'93Composite crystilized cognition\'94\
\
table1::label(data_table$AVGfluid)  <- \'93Composite fluid cognition\'94\
\
\
###### Simplest Table only with despcriptive stats ###### \
\
table1(~ Age+ Sex+ Income+Parents_H_Degree+mri_info_manufacturer  +nihtbx_fluidcomp_uncorrected+nihtbx_cryst_uncorrected+nihtbx_picvocab_uncorrected+nihtbx_list_uncorrected+AVGcryst+AVGfluid, data=data_table)\
\
\
\
\
library(MatchIt) \
\
pvalue <- function(x, ...) \{\
    # Construct vectors of data y, and groups (strata) g\
    y <- unlist(x)\
    g <- factor(rep(1:length(x), times=sapply(x, length)))\
    if (is.numeric(y)) \{\
        # For numeric variables, perform a standard 2-sample t-test\
        p <- t.test(y ~ g)$p.value\
    \} else \{\
        # For categorical variables, perform a chi-squared test of independence\
        p <- chisq.test(table(y, g))$p.value\
    \}\
    # Format the p-value, using an HTML entity for the less-than sign.\
    # The initial empty string places the output on the line below the variable label.\
    c("", sub("<", "&lt;", format.pval(p, digits=3, eps=0.001)))\
\}\
\
\
\
table1(Sex~ + Age.x + Parents_H_Degree+ Income+ nihtbx_cryst_uncorrected.y nihtbx_fluidcomp_uncorrected | XX_final_paper$Sex , data=XX_final_paper, overall=F, extra.col=list( "P-value"=pvalue))\
\
\
#### Now tables for discovery and replication data sets #### \
\
\
half_size <- floor(0.75 * nrow(data_table)) \
\
random_sample <- sample(seq_len(nrow(data_table)), size = half_size)\
\
discovery <- data_table[random_sample,]\
\
replication <- data_table[-random_sample,]\
\
\
sample1=sample(c("discovery"), 1583, replace=TRUE)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 sample2=sample(c("replication"), 1584, replace=TRUE)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 discovery=cbind(discovery,sample1)\
\
replication=cbind(replication,sample2)\
\
discovery=as.matrix(discovery)\
\
replication=as.matrix(replication)\
\
combinedmatrix <- rbind(discovery, replication)\
\
combinedmatrix= data.frame(combinedmatrix)\
\
###### Now a table with stratification for discovery and replication dataset##table1::label(combinedmatrix$sample1)  <- \'93Sample\'94\
\
table1::label(combinedmatrix$Age)  <- "Age (months first session)\'94\
table1::label(combinedmatrix$Parents_H_Degree)  <- "Highest-degreed parent (years)"\
\
table1::label(combinedmatrix$Sex)  <- "Age (months first session)\'94\
\
table1::label(combinedmatrix$Income)  <- "Household Income (year) in USD\'94\
\
table1::label(combinedmatrix$mri_info_manufacturer)  <- \'93MRI manufacturer\'94\
\
table1::label(combinedmatrix$rsfmri_c_ngd_meanmotion)  <- \'93Average framewise displacement in mm\'94\
\
table1::label(combinedmatrix$nihtbx_list_uncorrected)  <- \'93NIH  List Sorting Working Memory Score\'94\
\
table1::label(combinedmatrix$nihtbx_fluidcomp_uncorrected)  <- \'93Fluid intelligence Score NIH\'94\
\
table1::label(combinedmatrix$nihtbx_cryst_uncorrected)  <- \'93Crystilized intelligence Score NIH\'94\
\
table1::label(combinedmatrix$nihtbx_picvocab_uncorrected)  <- \'93Picture Vocabulary Test Score NIH\'94\
\
table1::label(combinedmatrix$AVGcryst)  <- \'93Composite crystilized cognition\'94\
\
table1::label(combinedmatrix$AVGfluid)  <- \'93Composite fluid cognition\'94\
\
\
###### Simplest Table only with despcriptive stats ###### \
\
\
library(MatchIt) \
\
pvalue <- function(x, ...) \{\
    # Construct vectors of data y, and groups (strata) g\
    y <- unlist(x)\
    g <- factor(rep(1:length(x), times=sapply(x, length)))\
    if (is.numeric(y)) \{\
        # For numeric variables, perform a standard 2-sample t-test\
        p <- t.test(y ~ g)$p.value\
    \} else \{\
        # For categorical variables, perform a chi-squared test of independence\
        p <- chisq.test(table(y, g))$p.value\
    \}\
    # Format the p-value, using an HTML entity for the less-than sign.\
    # The initial empty string places the output on the line below the variable label.\
    c("", sub("<", "&lt;", format.pval(p, digits=3, eps=0.001)))\
\}\
\
\
table1(~ Age+ Sex+ Income+mri_info_manufacturer+rsfmri_c_ngd_meanmotion+nihtbx_list_uncorrected+nihtbx_fluidcomp_uncorrected+nihtbx_cryst_uncorrected+nihtbx_picvocab_uncorrected+nihtbx_list_uncorrected+AVGcryst+AVGfluid | sample1, data=combinedmatrix, overall=F,extra.col=list( "P-value"=pvalue))\
\
}
