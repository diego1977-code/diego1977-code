{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 library(readxl)\
\
library(dplyr)\
library(readxl)\
\
library(glmnet)\
\
library(glmmLasso)\
\
library(caret)\
\
library(sjPlot)\
library(devtools)\
library(interactions)\
\
setwd(dir = "/Users/diegolombardo/Desktop/ABCD_project")\
\
\
\
 \
### site 1 to 21 ###  \
\
my_data3=read_excel(\'93abcd_lt01.xlsx\'94)\
\
### MRI serial number and info to exclude philips manufacturer ## \
\
my_data2=read_excel("abcd_mri01.xlsx")\
\
\
\
### database in workspace with FMRI and complete cognitve tests##  \
\
\
\
\
## Movement correction and resting- state fMRI ## \
\
my_data4=read_excel(\'94abcd_betnet02.xlsx\'94)\
basal=my_data4[my_data4$eventname== \'93baseline_year_1_arm_1\'94, ]\
basal_complete=basal[!is.na(basal$rsfmri_c_ngd_dt_ngd_dt),]\
\
\
basal_complete=basal_complet
\f1\b e
\f0\b0 [!duplicated(basal_complete$subjectkey), ]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\
total of 11244 subjects in T0 MRIMerged 
\f0\b0 \
\
 Now \
\
#### select only the rs-fmri baasl sesion #### \
 Include the basal session closer \
\
\
basal_demo=demo2[demo2$eventname== "2_year_follow_up_y_arm_1", ]\
\
\
\
basal_fmri=basal_fmri[!duplicated(basal_fmri$subjectkey), ]\
\
\
###  cognitive data ### \
\
my_data3=read_excel(\'93abcd_tbss01.xls\'94)\
\
basal_cognition=my_data3[my_data3$eventname== \'93baseline_year_1_arm_1\'94, ]\
\
\
\
cog=basal_cognition[!is.na(basal_cognition$nihtbx_fluidcomp_uncorrected) & basal_cognition$nihtbx_fluidcomp_uncorrected & basal_cognition$nihtbx_picvocab_uncorrected &  basal_cognition$nihtbx_list_uncorrected,]\
\
\
\
cog=cog[!duplicated(cog$subjectkey), ]\
\
Complete cognition 8543 participants \
\
\
####Merge those with MRI and complete cognitve evaluation ###### \
\
\
######## keep only complete cases  with FMRI and cognition#######\
\
Merged=merge(cog,basal_complete, by="subjectkey", all.x=TRUE)\
\
#### drop-out NaNs from networks of interest ## \
\
\
\
Merged=Merged[complete.cases(Merged$rsfmri_c_ngd_dt_ngd_dt),]\
 Merged=Merged[complete.cases(Merged$nihtbx_cryst_uncorrected & Merged$nihtbx_fluidcomp_uncorrected & Merged$nihtbx_list_uncorrected),]\

\f1\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 Merged=Merged[!duplicated(Merged$subjectkey), ]\
\
\
### 
\f1\b 8067 subjects left with complete MRI and cognition at T0 
\f0\b0  ### \
 \
\
\
### now see how many of them have relevant demogrpahic inf as Income, parent\'92s education  ## \
\
\
my_demo=read_excel("abcd_lpds01.xlsx\'94)\
\
\
### clean data only keep complete  \'93demo_prnt_income_v2_l\'94  AND \'93demo_prnt_ed_v2_l\'94  parents income and education ## \
\
demo1=my_demo[!is.na(my_demo$Income),]\
\
demo2=demo1[!is.na(demo1$Parents_H_Degree),]\
\
basal_demo=demo2[demo2$eventname== "2_year_follow_up_y_arm_1", ]\
\
\
#### Now merge the fmri cognitve with the demohgraphic  ##### \
\
dim(Merged)  ### Result of MRI and cognittie \
\
Merged2=merge(Merged,basal_demo, by="subjectkey")\
\
final=Merged2[!is.na(Merged2$Parents_H_Degree),]\
\
final1=final[!duplicated(final$subjectkey), ]\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 7050 with complete fMRI, cognitive
\f0\b0  test
\f1\b  and demographic information on T0\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \
\
 final1=final1[!is.na(final2$rsfmri_c_ngd_meanmotion),]\
\
rsfmri_c_ngd_meanmotion\
\
\
clean_headmov <- subset(final1, final1$rsfmri_c_ngd_meanmotion < 0.2)\
\
#####
\f1\b  3824 subjects
\f0\b0  #####  \
\
##### clean data based in NAN of a Variable of interest #### \
\
explore number of subject that left \'85\
\
final3$rsfmri_c_ngd_meanmotion=as.numeric(final3$rsfmri_c_ngd_meanmotion)\
\
\
Q <- quantile(final3$rsfmri_c_ngd_meanmotion, probs=c(.25, .75), na.rm = FALSE)\
iqr <- IQR(final3$rsfmri_c_ngd_meanmotion)\
\
up <-  Q[2]+1.5*iqr # Upper Range  \
low<- Q[1]-1.5*iqr # Lower Range\uc0\u65279 \
\
eliminated<- subset(final3, final3$rsfmri_c_ngd_meanmotion > (Q[1] - 1.5*iqr))\
\
no_outliers <- subset(final3, final3$rsfmri_c_ngd_meanmotion < (Q3 + 1.5*IQR)) \
\
 dim(no_outliers)\
\
### 6474 taking the upper percentil ## \
\
 basal_MRIinfo=my_data2[my_data2$eventname == "baseline_year_1_arm_1", ]\
\
Mergedfinal=merge(final3,basal_MRIinfo, by="subjectkey")\
\
Mergedfinal=Mergedfinal[!duplicated(Mergedfinal$subjectkey), ]\
\
#### include only SIEMENS AND GE ####\
\
\
Mergedfinal<-subset(Mergedfinal, mri_info_manufacturer!="Philips Medical Systems")\
simens and ge\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 3413  participants \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \
\
Mergedfinal$mri_info_manufacturer\
\
Keep GE and SIEMENS \
\
\
\
clean_headmov <- subset(Mergedfinal,Mergedfinal$rsfmri_c_ngd_meanmotion < 0.2)\
final_data=clean_headmov[!is.na(clean_headmov$rsfmri_c_ngd_dt_ngd_dt),]\
### cheking ### \
my_data=final_data[!duplicated(final_data$subjectkey), ]\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 we end up with 3413 subjects \
\
###### Calculate the scores in crystilized and fluid cognition ####### \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 AVGcryst=((my_data$nihtbx_cryst_uncorrected+my_data$nihtbx_picvocab_uncorrected)/2)\
\
\
AVGfluid=((my_data$nihtbx_fluidcomp_uncorrected+my_data$nihtbx_list_uncorrected)/2)\
\
my_data=cbind(my_data,AVGcryst,AVGfluid)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\
### Change name of the networks of interest so that thave classic nomenclature ##\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 my_data <-rename(my_data,DMN = rsfmri_c_ngd_dt_ngd_dt)\
\
my_data$DMN=as.numeric(my_data$DMN)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \
my_data <-rename(my_data,DMN_DAN = rsfmri_c_ngd_dt_ngd_dla)\
\
my_data$DMN_DAN=as.numeric(my_data$DMN_DAN)
\f1\b \

\f0\b0 \
\
my_data <-rename(my_data,DMN_FPN = rsfmri_c_ngd_dt_ngd_fo)\
\
my_data$DMN_FPN=as.numeric(my_data$DMN_FPN)\
\
my_data <-rename(my_data,DMN_FPN = rsfmri_c_ngd_dt_ngd_fo)\
\
\
my_data$DMN_FPN=as.numeric(my_data$DMN_FPN)\
\
\
my_data <-rename(my_data,DMN_VAN = rsfmri_c_ngd_dt_ngd_vta)\
\
my_data$DMN_VAN=as.numeric(my_data$DMN_VAN)\
\
\
my_data <-rename(my_data,DAN = rsfmri_c_ngd_dla_ngd_dla)\
\
my_data$DAN=as.numeric(my_data$DAN)\
\
my_data <-rename(my_data,FPN_DAN = rsfmri_c_ngd_dla_ngd_fo)
\f1\b \

\f0\b0 my_data$FPN_DAN=as.numeric(my_data$FPN_DAN)
\f1\b \

\f0\b0 \
my_data <-rename(my_data,VAN_DAN = rsfmri_c_ngd_dla_ngd_vta)\
my_data$VAN_DAN=as.numeric(my_data$VAN_DAN)\
\
my_data <-rename(my_data,FPN = rsfmri_c_ngd_fo_ngd_fo)\
my_data$FPN=as.numeric(my_data$FPN)\
\
my_data <-rename(my_data,FPN_VAN = rsfmri_c_ngd_fo_ngd_vta)\
my_data$FPN_VAN=as.numeric(my_data$FPN_VAN)\
\
my_data <-rename(my_data,FPN_VAN = rsfmri_c_ngd_fo_ngd_vta)\
my_data$FPN_VAN=as.numeric(my_data$FPN_VAN)\
\
my_data <-rename(my_data, Age = interview_age.x)\
my_data$Age=as.numeric(my_data$Age)\
\
my_data <-rename(my_data, Sex = sex.x)\
my_data$Sex=as.numeric(my_data$Sex)\
\
my_data <-rename(my_data, sex = sex.y.1)\
\
\
######### Write as a factors all categorical variables ############\
\
  my_data$sex <- factor(my_data$sex, levels=c("F","M"),labels=c("Girls","Boys"))\
\
\
household.income = my_data$Income\
household.income[my_data$Income == "1"] = 1 # "[<50K]"\
household.income[my_data$Income == "2"] = 1 # "[<50K]"\
household.income[my_data$Income == "3"] = 1 # "[<50K]"\
household.income[my_data$Income == "4"] = 1 # "[<50K]"\
household.income[my_data$Income == "5"] = 1 # "[<50K]"\
household.income[my_data$Income== "6"] = 1 # "[<50K]"\
household.income[my_data$Income == "7"] = 2 # "[>=50K & <100K]"\
household.income[my_data$Income == "8"] = 2 # "[>=50K & <100K]"\
household.income[my_data$Income == "9"] = 3 # "[>=100K]"\
household.income[my_data$Income == "10"] = 3 # "[>=100K]"\
household.income[my_data$Income== "777"] = NA\
household.income[my_data$Income== "999"] = NA\
household.income[household.income %in% c(NA, "999", "777")] = NA\
my_data$Income = factor( household.income, levels= 1:3, labels = c("[<50K]", "[>=50K & <100K]", "[>=100K]") )\
\
\
### Keep only participants with complete Income coded here as 777 999 NA data set and drop- out ### \
\
 my_data=my_data[!is.na(my_data$Income),]\
\
\
Final cohort  N= 3167\
\
\
\
}